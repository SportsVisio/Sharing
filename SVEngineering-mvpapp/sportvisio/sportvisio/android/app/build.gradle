def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 29

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.example.sports_visio"
        minSdkVersion 24
        targetSdkVersion 27
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
            minifyEnabled false
            shrinkResources false
            ndk {
                abiFilters 'armeabi-v7a','arm64-v8a','x86_64'
            }
        }
    }

    lintOptions {
        baseline file("lint-baseline.xml")
        checkAllWarnings true
        abortOnError true
        disable 'InvalidPackage'
        disable 'NewerVersionAvailable'
        disable 'GradleDependency'
        disable 'ObsoleteSdkInt'
    }

    packagingOptions {
        exclude 'com/fasterxml/jackson/databind/cfg/VERSION.txt'
        exclude 'com/fasterxml/jackson/core/json/VERSION.txt'
        exclude 'META-INF/DEPENDENCIES'
    }

    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }

    buildToolsVersion = '28.0.3'

    flavorDimensions "androidversion"
//    productFlavors {
//        minSdk24 {
//            dimension "androidversion"
//            minSdkVersion 24
//            applicationIdSuffix ".minsdk24"
//            versionNameSuffix "-minsdk24"
//        }
//        minSdk28 {
//            dimension "androidversion"
//            minSdkVersion 28
//            applicationIdSuffix ".minsdk28"
//            versionNameSuffix "-minsdk28"
//        }
//    }
}

flutter {
    source '../..'
}

dependencies {
    def aws_version = '2.16.5'
    implementation("com.amazonaws:aws-android-sdk-kinesisvideo:$aws_version@aar") { transitive = true }
    implementation("com.amazonaws:aws-android-sdk-kinesisvideo-signaling:$aws_version@jar") { transitive = true }
    implementation("com.amazonaws:aws-android-sdk-mobile-client:$aws_version@aar") { transitive = true }
    implementation("com.amazonaws:aws-android-sdk-auth-userpools:$aws_version@aar") { transitive = true }
    implementation("com.amazonaws:aws-android-sdk-auth-ui:$aws_version@aar") { transitive = true }


    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'

    implementation 'org.awaitility:awaitility:3.0.0'
    implementation 'com.google.guava:guava:28.1-android'
    implementation 'org.apache.commons:commons-lang3:3.9'
    implementation 'org.json:json:20190722'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'org.slf4j:slf4j-api:1.7.29'
    implementation 'com.github.tony19:logback-android:2.0.0'
    implementation 'commons-codec:commons-codec:1.9'

    implementation 'org.osgi:org.osgi.framework:1.9.0'
    implementation 'org.webrtc:google-webrtc:1.0.28513'


    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'org.jetbrains:annotations:15.0'
    implementation("com.squareup.okhttp3:okhttp:4.9.0")

    implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.0'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.9.0'




//    minSdk24Implementation ('org.glassfish.tyrus.bundles:tyrus-standalone-client:1.12'){
//        exclude module : 'javax.inject'
//    }
//
//    minSdk28Implementation ('org.glassfish.tyrus.bundles:tyrus-standalone-client:1.15'){
//        exclude module : 'javax.inject'
//    }

    implementation('org.glassfish.tyrus.bundles:tyrus-standalone-client:1.15') {
        exclude module: 'javax.inject'
    }
}


