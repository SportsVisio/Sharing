service: nest-serverless-stream-api
useDotenv: true
variablesResolutionMode: 20210326
plugins:
 - serverless-plugin-typescript
 - serverless-plugin-optimize
 - serverless-offline

custom:
  currentStage: ${opt:stage, self:provider.stage, "dev"}
  optimize:
    external: ['swagger-ui-dist']
  serverless-offline:
    host: 0.0.0.0       # localhost will not work in Vagrant, so bind to 0.0.0.0
    port: 3000          # default

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: "20201221"
  region: "us-east-1"
  tracing:
    lambda: true
  vpc:
    securityGroupIds:
      - ${env:SECURITY_GROUP_ID}
    subnetIds:
      - ${env:SUBNET1_ID}
      - ${env:SUBNET2_ID}
      - ${env:SUBNET3_ID}
      - ${env:SUBNET4_ID}
  environment:
    processingLambda: kvs-consumer-daemon-${self:custom.currentStage}-main
    DB_USER: ${env:DB_USER}
    DB_PASSWORD: ${env:DB_PASSWORD}
    DB_HOST: ${env:DB_HOST}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:*
      Resource: "*"
    - Effect: Allow
      Action:
        - logs:*
      Resource: "*"
    - Effect: "Allow"
      Resource: "*"
      Action:
        - "kinesisvideo:*"
    - Effect: "Allow"
      Resource: "*"
      Action:
        - "dynamodb:*"
    - Effect: "Allow"
      Resource: "*"
      Action:
        - "lambda:*"

package:
  individually: true
  excludeDevDependencies: true

functions:
 main: # The name of the lambda function
   handler: lambda.handler
   events:
     - http:
         method: any
         path: /{any+}